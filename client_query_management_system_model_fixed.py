# -*- coding: utf-8 -*-
"""Client_Query_Management_System_model_15Sep2025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mcfmG0oVInoo6akleHy8Dwm0BMQIiaTP
"""


import pandas as pd
import mysql.connector
from datetime import datetime

file_path = r"C:\Users\Vishal\OneDrive\Desktop\synthetic_client_queries.csv"

df = pd.read_csv(file_path)

print("Dataset loaded successfully!")
print(df.head())

mydb = mysql.connector.connect(
    host="127.0.0.1",
    user="root",
    password="VISHAL$26498",
    database="client_query_db"
)

cursor = mydb.cursor()

for _, row in df.iterrows():
    cursor.execute("""
        INSERT INTO client_queries (email, mobile, heading, description, status, query_created_time)
        VALUES (%s, %s, %s, %s, %s, %s)
    """, (
        row['client_email'],        # from CSV
        row['client_mobile'],
        row['query_heading'],
        row['query_description'],
        "Open",
        datetime.now()
    ))

import streamlit as st
import mysql.connector
import hashlib
from datetime import datetime

def get_connection():
    return mysql.connector.connect(
        host="127.0.0.1",
        user="root",
        password="VISHAL$26498",
        database="client_query_db"
    )

def login():
    st.title("Login")
    username = st.text_input("Username")
    password = st.text_input("Password", type="password")
    role = st.selectbox("Role", ["Client", "Support"])
    if st.button("Login"):
        conn = get_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM users WHERE username=%s AND hashed_password=%s AND role=%s",
                       (username, hash_password(password), role))
        user = cursor.fetchone()
        conn.close()
        if user:
            st.success(f"Welcome {username}! Logged in as {role}")
            if role == "Client":
                client_page(username)
            else:
                support_page()
        else:
            st.error("Invalid credentials")

def client_page(username):
    st.subheader("Submit a New Query")
    email = st.text_input("Email ID")
    mobile = st.text_input("Mobile Number")
    heading = st.text_input("Query Heading")
    description = st.text_area("Query Description")
    if st.button("Submit Query"):
        conn = get_connection()
        cursor = conn.cursor()
        cursor.execute("""
            INSERT INTO client_queries (email, mobile, heading, description, status, query_created_time)
            VALUES (%s, %s, %s, %s, %s, %s)
        """, (email, mobile, heading, description, "Open", datetime.now()))
        conn.commit()
        conn.close()
        st.success("Query submitted successfully!")

def support_page():
    st.subheader("Manage Client Queries")
    conn = get_connection()
    cursor = conn.cursor(dictionary=True)
    cursor.execute("SELECT * FROM client_queries")
    rows = cursor.fetchall()
    conn.close()
    for row in rows:
        st.write(f"ID: {row['query_id']} | {row['heading']} | Status: {row['status']}")
        if row['status'] == "Open":
            if st.button(f"Close Query {row['query_id']}"):
                conn = get_connection()
                cursor = conn.cursor()
                cursor.execute("UPDATE client_queries SET status=%s, query_closed_time=%s WHERE query_id=%s",
                               ("Closed", datetime.now(), row['query_id']))
                conn.commit()
                conn.close()
                st.success(f"Query {row['query_id']} closed.")

def main():
    login()

if __name__ == "__main__":
    main()

